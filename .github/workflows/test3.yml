name: Lint Kubernetes Configurations

on:
  push:
    branches:
      - main

jobs:
  lint-and-validate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install kube-linter
      run: |
        curl -s https://api.github.com/repos/stackrox/kube-linter/releases/latest | \
        grep "browser_download_url.*linux" | \
        cut -d : -f 2,3 | tr -d '"' | wget -qi -
        echo "Downloaded files:"
        ls -la
        FILE=$(ls kube-linter-*.tar.gz | head -n 1)
        echo "Extracting: $FILE"
        tar -xzf "$FILE"
        chmod +x kube-linter
        sudo mv kube-linter /usr/local/bin/
        rm -f kube-linter-*.tar.gz

    - name: Verify kube-linter installation
      run: |
        kube-linter version

    - name: Validate Kubernetes k8s directory
      run: |
        if [ -d "k8s" ]; then
          echo "'k8s/' directory found. Running kube-linter lint..."
          kube-linter lint k8s/
        else
          echo "Error: 'k8s/' directory not found. Skipping kube-linter lint."
          exit 1
        fi

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    - name: List files in k8s directory
      run: |
        echo "Listing files in the 'k8s' directory:"
        ls -R k8s

    - name: Rename chart.yaml to Chart.yaml
      run: |
        mv k8s/chart.yaml k8s/Chart.yaml
        echo "Renamed chart.yaml to Chart.yaml"

    - name: Run yamllint on k8s resources
      run: |
        yamllint k8s/Chart.yaml
        yamllint k8s/deployment.yaml
        yamllint k8s/service.yaml


    - name: Check Helm Chart Validity
      run: |
        if helm lint ./k8s; then
          echo "Helm chart is valid."
        else
          echo "Helm chart is invalid."
          exit 1
        fi

    - name: Helm Template Rendering
      run: |
        echo "Rendering Helm templates..."
        helm template ./k8s
        echo "Template rendering complete"

    - name: Test Helm Upgrade (optional)
      run: |
        helm upgrade --install myapp ./k8s --dry-run
        echo "Helm upgrade dry-run complete"

    - name: Dockerfile Linting (optional)
      run: |
        if [ -f "Dockerfile" ]; then
          echo "Linting Dockerfile..."
          hadolint Dockerfile
          echo "Dockerfile linting complete"
        else
          echo "No Dockerfile found, skipping linting."
        fi

    - name: Security Scanning (Trivy) (optional)
      run: |
        sudo apt-get install -y trivy
        trivy fs k8s/
        trivy image my-app:latest
        echo "Security scanning complete"

    - name: Helm Dependency Update
      run: |
        echo "Updating Helm chart dependencies..."
        helm dependency update ./k8s
        echo "Helm dependencies updated"

    - name: Check Kubernetes Cluster Connectivity
      run: |
        echo "Checking Kubernetes cluster connectivity..."
        kubectl version --short
        kubectl get nodes
        echo "Kubernetes cluster check complete"

    - name: Kubernetes Apply Test (Dry Run)
      run: |
        kubectl apply -f k8s/deployment.yaml --dry-run=client
        kubectl apply -f k8s/service.yaml --dry-run=client
        echo "Kubernetes dry-run check complete"

    - name: Helm Package
      run: |
        echo "Packaging Helm chart..."
        helm package ./k8s
        echo "Helm chart packaged"

    - name: Kubernetes Namespace Validation
      run: |
        echo "Checking if the required namespace exists..."
        kubectl get namespace myapp || kubectl create namespace myapp
        echo "Namespace validation complete"

    - name: Final Helm Lint and Deploy Check
      run: |
        helm lint ./k8s
        echo "Final Helm lint complete"
        helm upgrade --install myapp ./k8s
        echo "Helm deployment complete"
